name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        run: docker compose version

      - name: Build and start containers
        run: docker compose up -d --build

      - name: Create users table
        run: |
          docker compose exec -T db psql -U postgres -d postgres -c "
          CREATE TABLE IF NOT EXISTS users (
            id SERIAL PRIMARY KEY,
            username VARCHAR(255) UNIQUE,
            password VARCHAR(255),
            weight INT,
            height INT,
            age INT,
            nutrition_log JSONB
          );"

      - name: Insert test user
        run: |
          docker compose exec -T db psql -U postgres -d postgres -c "
            INSERT INTO users (username, password, weight, height, age, nutrition_log)
            VALUES (
              'tyrion',
              '12345678',
              100,
              100,
              100,
              '[
                {
                  \"food\": \"Grilled Chicken Breast\",
                  \"timestamp\": \"2025-07-12T14:32:45\",
                  \"quantity\": 150.5,
                  \"nutrients\": {
                    \"protein\": 31.2,
                    \"carbs\": 0,
                    \"fat\": 3.6,
                    \"calories\": 165,
                    \"fiber\": 0,
                    \"sugar\": 0,
                    \"sodium\": 74
                  }
                }
              ]'::jsonb
            )
            ON CONFLICT (username) DO NOTHING;"

      - name: Wait for app to be ready
        run: |
          echo "Waiting for app on localhost:9000..."
          until curl -s http://localhost:9000/healthcheck; do
            echo "Still waiting for app..."
            sleep 3
          done
          echo "App is up!"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install test dependencies
        run: pip install -r Backend/requirements.txt

      - name: Run pytest
        run: pytest test/

      - name: Show app container logs on failure
        if: failure()
        run: docker compose logs app

      - name: Shut down containers
        run: docker compose down
